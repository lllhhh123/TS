{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["interface EventFace {\r\n    on: (name: string, callback: Function) => void,  //监听\r\n    emit: (name: string, ...args: Array<any>) => void, //发布\r\n    off: (name: string, fn: Function) => void, //解除绑定\r\n    once: (name: string, fn: Function) => void  //只执行一次\r\n}\r\n \r\ninterface List {\r\n    [key: string]: Array<Function>,\r\n}\r\nclass Dispatch implements EventFace { \r\n    list: List\r\n    constructor() {\r\n        this.list = {}\r\n    }\r\n    on(name: string, callback: Function) {\r\n        const callbackList: Array<Function> = this.list[name] || [];\r\n        callbackList.push(callback)\r\n        this.list[name] = callbackList\r\n    }\r\n    emit(name: string, ...args: Array<any>) {\r\n        let evnetName = this.list[name]\r\n        if (evnetName) {\r\n            evnetName.forEach(fn => {\r\n                fn.apply(this, args)\r\n            })\r\n        } else {\r\n            console.error('该事件未监听');\r\n        }\r\n    }\r\n    off(name: string, fn: Function) {\r\n        let evnetName = this.list[name]\r\n        if (evnetName && fn) {\r\n            let index = evnetName.findIndex(fns => fns === fn)\r\n            evnetName.splice(index, 1)\r\n        } else {\r\n            console.error('该事件未监听');\r\n        }\r\n    }\r\n    once(name: string, fn: Function) {\r\n        let decor = (...args: Array<any>) => {\r\n            fn.apply(this, args)\r\n            this.off(name, decor)\r\n        }\r\n        this.on(name, decor)\r\n    }\r\n}\r\nconst o = new Dispatch()\r\n \r\n \r\no.on('abc', (...arg: Array<any>) => {\r\n    console.log(arg, 1);\r\n})\r\n \r\no.once('abc', (...arg: Array<any>) => {\r\n    console.log(arg, 'once');\r\n})\r\n// let fn = (...arg: Array<any>) => {\r\n//     console.log(arg, 2);\r\n// }\r\n// o.on('abc', fn)\r\n// o.on('ddd', (aaaa: string) => {\r\n//     console.log(aaaa);\r\n// })\r\n//o.off('abc', fn)\r\n \r\no.emit('abc', 1, true, '小满')\r\n \r\no.emit('abc', 2, true, '小满')\r\n \r\n// o.emit('ddd', 'addddddddd')"],"names":["Dispatch","this","list","prototype","on","name","callback","callbackList","push","emit","_this","args","_i","arguments","length","evnetName","forEach","fn","apply","console","error","off","index","findIndex","fns","splice","once","decor","o","arg","log"],"mappings":"gXAUA,IAAAA,EAAA,WAEI,SAAAA,IACIC,KAAKC,KAAO,EACf,CAgCL,OA/BIF,EAAAG,UAAAC,GAAA,SAAGC,EAAcC,GACb,IAAMC,EAAgCN,KAAKC,KAAKG,IAAS,GACzDE,EAAaC,KAAKF,GAClBL,KAAKC,KAAKG,GAAQE,GAEtBP,EAAIG,UAAAM,KAAJ,SAAKJ,OAAL,IASCK,EAAAT,KATqCU,EAAA,GAAAC,EAAA,EAAnBA,EAAmBC,UAAAC,OAAnBF,IAAAD,EAAmBC,EAAA,GAAAC,UAAAD,GAClC,IAAIG,EAAYd,KAAKC,KAAKG,GACtBU,EACAA,EAAUC,SAAQ,SAAAC,GACdA,EAAGC,MAAMR,EAAMC,EACnB,IAEAQ,QAAQC,MAAM,WAGtBpB,EAAAG,UAAAkB,IAAA,SAAIhB,EAAcY,GACd,IAAIF,EAAYd,KAAKC,KAAKG,GAC1B,GAAIU,GAAaE,EAAI,CACjB,IAAIK,EAAQP,EAAUQ,WAAU,SAAAC,GAAO,OAAAA,IAAQP,CAAR,IACvCF,EAAUU,OAAOH,EAAO,EAC3B,MACGH,QAAQC,MAAM,WAGtBpB,EAAAG,UAAAuB,KAAA,SAAKrB,EAAcY,GAAnB,IAMCP,EAAAT,KALO0B,EAAQ,eAAC,IAAmBhB,EAAA,GAAAC,EAAA,EAAnBA,EAAmBC,UAAAC,OAAnBF,IAAAD,EAAmBC,GAAAC,UAAAD,GAC5BK,EAAGC,MAAMR,EAAMC,GACfD,EAAKW,IAAIhB,EAAMsB,EACnB,EACA1B,KAAKG,GAAGC,EAAMsB,IAErB3B,CAAD,IACM4B,EAAI,IAAI5B,EAGd4B,EAAExB,GAAG,OAAO,eAAC,IAAkByB,EAAA,GAAAjB,EAAA,EAAlBA,EAAkBC,UAAAC,OAAlBF,IAAAiB,EAAkBjB,GAAAC,UAAAD,GAC3BO,QAAQW,IAAID,EAAK,EACrB,IAEAD,EAAEF,KAAK,OAAO,eAAC,IAAkBG,EAAA,GAAAjB,EAAA,EAAlBA,EAAkBC,UAAAC,OAAlBF,IAAAiB,EAAkBjB,GAAAC,UAAAD,GAC7BO,QAAQW,IAAID,EAAK,OACrB,IAUAD,EAAEnB,KAAK,MAAO,GAAG,EAAM,MAEvBmB,EAAEnB,KAAK,MAAO,GAAG,EAAM"}